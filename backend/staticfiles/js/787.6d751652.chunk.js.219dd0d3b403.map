{"version":3,"file":"static/js/787.6d751652.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Spinner.js","components/Video.js","components/Lesson.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation,\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import React from 'react'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nconst Video = ({ video }) => {\r\n    return (\r\n        <div key={Math.random()} className=\"mb-2 text-center\">\r\n            <h1>{video.name}</h1>\r\n            <iframe src={video.player_embed_url} width=\"100%\" height=\"500\" frameBorder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" title=\"2 сердце boys .MOV\"></iframe>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Video","import React, { useEffect, useState, useContext, useLayoutEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Video from './Video'\r\n\r\nconst Lesson = () => {\r\n    const params = useParams()\r\n    const navigate = useNavigate()\r\n    const { tokens, logout, setHeader } = useContext(AuthContext)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const [activeTab, setActiveTab] = useState(0)\r\n\r\n    const [lessonData, setLessonData] = useState({\r\n        error: '',\r\n        id: '',\r\n        name: '',\r\n        description: '',\r\n        preview: '',\r\n        photos: '',\r\n        videos: '',\r\n        excersize: '',\r\n    })\r\n\r\n    useEffect(() => {\r\n        const getLessonData = async () => {\r\n            const config = {\r\n                headers: {\r\n                    'Authorization': `JWT ${tokens.access}`\r\n                }\r\n            }\r\n            await axios.get(`${process.env.REACT_APP_API_URL}/lesson/${params.lessonID}`, config)\r\n                .then(res => {\r\n                    setLessonData({\r\n                        error: \"\",\r\n                        id: res.data.lesson.id,\r\n                        name: res.data.lesson.name,\r\n                        description: res.data.lesson.description,\r\n                        preview: res.data.lesson.preview,\r\n                        photos: res.data.lesson.photos,\r\n                        videos: res.data.videos,\r\n                        excersize: res.data.lesson.excersize\r\n                    })\r\n                    setHeader(res.data.name)\r\n                    setLoading(false)\r\n                })\r\n                .catch(err => {\r\n                    logout()\r\n                    // err.response.status === 401 && logout()\r\n                    // err.response.status === 403 && setLessonData({ error: 'У вас нет доступа к этому уроку' })\r\n                })\r\n        }\r\n        getLessonData()\r\n\r\n    }, [params.lessonID, tokens.access, logout, setHeader])\r\n\r\n    if (loading) return <Spinner animation='border' className=\"spinner-border-xl f-flex justify-\" />\r\n\r\n    if (lessonData.error) return <h1>{lessonData.error}</h1>\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"col-sm-3 d-flex flex-row justify-content-evenly mb-4\">\r\n                <div className={`w-100 text-center text-primary p-2 ${activeTab === 0 && \"border-bottom border-3 border-primary\"}`} role=\"button\" onClick={() => setActiveTab(0)}>Урок</div>\r\n                <div className={`w-100 text-center text-primary p-2 ${activeTab === 1 && \"border-bottom border-3 border-primary\"}`} role=\"button\" onClick={() => setActiveTab(1)}>Задание</div>\r\n                <div className={`w-100 text-center text-primary p-2 ${activeTab === 2 && \"border-bottom border-3 border-primary\"}`} role=\"button\" onClick={() => setActiveTab(2)}>Обсуждение</div>\r\n            </div>\r\n            {/* <div className=''>\r\n                <div style={{ height: '80vh', position: \"relative\" }}><iframe src=\"https://player.vimeo.com/video/675531313?h=fbd0a03228&amp;badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=58479\" frameBorder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowFullScreen style={{ position: \"absolute\", top: 0, left: 0, width: \"100%\", height: \"100%\" }} title=\"2 сердце boys .MOV\"></iframe></div>\r\n                <h1>{lessonData.name}</h1>\r\n                <h2>{lessonData.description}</h2>\r\n                <img src={lessonData.preview} alt='preview' />\r\n            </div> */}\r\n            <div className={activeTab === 0 ? \"d-block\" : \"d-none\"}>\r\n                <h1>{lessonData.name}</h1>\r\n                <p>{lessonData.description}</p>\r\n                <div className='mb-4'>\r\n                    {lessonData.videos && lessonData.videos.map(video => <Video video={video} />)}\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-md-row pb-4\">\r\n                    {lessonData.photos && lessonData.photos.map(photo => <div key={photo.id} className=\"col-md-4 mb-2 text-center\">\r\n                        <h1>{photo.name}</h1>\r\n                        <img key={photo.id} src={photo.url} alt={photo.name} width=\"100%\" />\r\n                    </div>)}\r\n                </div>\r\n            </div>\r\n            <div className={activeTab === 1 ? \"d-block\" : \"d-none\"}>\r\n\r\n            </div>\r\n            <div className={activeTab === 2 ? \"d-block\" : \"d-none\"}>\r\n                <h1>Third</h1>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Lesson"],"names":["Spinner","React","ref","bsPrefix","variant","animation","size","as","Component","className","props","useBootstrapPrefix","bsSpinnerPrefix","_jsx","classNames","displayName","video","name","src","player_embed_url","width","height","frameBorder","allow","title","Math","random","params","useParams","useNavigate","useContext","AuthContext","tokens","logout","setHeader","useState","loading","setLoading","activeTab","setActiveTab","error","id","description","preview","photos","videos","excersize","lessonData","setLessonData","useEffect","getLessonData","config","headers","access","axios","process","lessonID","then","res","data","lesson","catch","err","role","onClick","map","photo","url","alt"],"sourceRoot":""}